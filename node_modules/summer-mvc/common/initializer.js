exports.initStructure = function(){
  let common = require( "../common/common.js" );

  let initializer = require( "../properties/initializer.json" );
  let architecture = initializer[ "context_architecture" ];

  for( var i=0; i<architecture.length; i++ ){
    let folder = architecture[i].folder;

    if( getInitOption( "remove_and_rebuild" ) ){
        makeBackup( folder );
    }

    for( var j=0; j<architecture[i].files.length; j++ ){
      let fileName = architecture[i].files[j];

      common.buildStructure( folder, fileName );
    }
  }
}

function getInitOption( option ){
  let initializer = require( "../properties/initializer.json" );
  let options = initializer[ "options" ];

  switch( option ) {
    case "use_service" :
      return options.use_service;
    case "remove_and_rebuild" :
      return options.remove_and_rebuild;
    default:
      return undefined;
  }
}

function makeBackup( path ){
  let common = require( "../common/common.js" );

  common.renameFolder( path );
}
